version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_LOG_RETENTION_MS: 20000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 2000
      KAFKA_MIN_INSYNC_REPLICAS: '1'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
  api:
    build: .
    environment:
      API_HOST: 0.0.0.0
      API_PORT: 8080
      API_DBHOST: mysql
    ports:
      - '8080:8080'
    depends_on:
      kafka:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ads
      POSTGRES_USER: wopwop
      POSTGRES_PASSWORD: wopwop
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
volumes:
  db:
    driver: local